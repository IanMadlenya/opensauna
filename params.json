{"name":"OpenSauna","tagline":"Sauna - a social news reader and curation tool","body":"Sauna\r\n=====\r\n##### Filter your social streams. Find the fresh links. Share with your readers.\r\n\r\nSauna is a social news aggregator and curation tool.\r\nThis is the open-source version of [Sauna.io](http://sauna.io).\r\n\r\nIt scans your Twitter stream and RSS feeds looking for links.\r\nAnd it automatically extracts the important text and images from each link.\r\nOver time, Sauna learns what types of links you like, and hides the ones you don't.\r\n\r\nSauna also allows you to curate the links you like with your friends, fans,\r\nor readers. Create a customized linkstream site (like [bruno.sauna.io](http://bruno.sauna.io)). Built-in social sharing on Twitter and Facebook, with scheduled posting.\r\n\r\nSauna was created by Bruno Bornsztein for [Curbly](http://www.curbly.com).\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n*Note: I'm still trying to smooth out the install process. Please help\r\nme out by going through the steps and telling me what doesn't work!*\r\n\r\nSauna runs on Ruby 1.9.x with Rails 3.2.\r\n\r\nPrior to installing, you'll need [mongodb](http://www.mongodb.org/) and [Redis](http://redis.io/) installed on your machine.\r\n\r\n1. Clone the repository: `git clone https://github.com/bborn/opensauna.git`\r\n2. Copy `sample.env` to `.env`. Don't add `.env` to the git repo.\r\n3. Fill in the required values in your `.env` file.\r\n\r\n    `SECRET_TOKEN`  - use `rake secret` to generate a token\r\n\r\n    `BASE_HOST_NAME` - for Heroku, this will be `yourappname.herokuapp.com`, unless you add a custom domain, in which case it'll be `customdomain.com` (without `www`)\r\n\r\n4. `bundle install`\r\n5. `rake db:migrate`\r\n6. `bundle exec foreman start -f Procfile.local`. (The app should now be\r\nrunning on `localhost:5000`)\r\n\r\n\r\nDeploying to Heroku\r\n-------------------\r\n\r\nTo Deploy to heroku:\r\n\r\n1. Create a new Heroku app\r\n2. Set the required variables from your local `.env` file on Heroku\r\n(using `heroku config:set`). You can also use the\r\n[heroku-config](https://github.com/ddollar/heroku-config) plugin to sync local and remote config vars.\r\n3. Provision the required addons:\r\n\r\n  - [rediscloud](https://addons.heroku.com/rediscloud)\r\n  - [mongohq](https://addons.heroku.com/mongohq)\r\n  - [memcachier](https://addons.heroku.com/memcachier)\r\n  - [sendgrid](https://addons.heroku.com/sendgrid)\r\n\r\n4. Push your app to Heroku (`git push heroku`) and migrate (`heroku run rake\r\ndb:migrate`)\r\n\r\nRunning Workers on Heroku\r\n-------------------------\r\n\r\nLook in the `Procfile` to see which processes are defined. You can leave\r\nworkers running for each of these, but a better approach is to use\r\nautoscaling. Try [Hirefire](http://hirefire.io/),\r\n[AdeptScale](https://addons.heroku.com/adept-scale) or the\r\n[Autoscaler](https://github.com/JustinLove/autoscaler) gem.\r\n\r\nAdmin User\r\n----------\r\nSet the boolean `admin` attribute to `true` on a user to give him access to the\r\nadmin backend (`/admin`) and Sidekiq UI (`/sidekiq`). On Heroku, you can\r\nuse `heroku run console` to do this.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}